apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-postgres-sample
  namespace: default
spec:
  selector:
    matchLabels:
      app: spring-boot-postgres-sample
  replicas: 1
  template:
    metadata:
      name: spring-boot-postgres-sample
      labels:
        app: spring-boot-postgres-sample
    spec:
      containers:
      - name: spring-boot-postgres-sample
        image: muttud/devops_intigration_update
        imagePullPolicy: IfNotPresent
        env:
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: postgres-config
                key: postgres_user
          - name: POSTGRES_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: postgres-config
                key: postgres_password
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: postgres-config
                key: pg_host
---
apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: spring-boot-postgres-sample
spec:
  selector:
    app: spring-boot-postgres-sample
  ports:
    - nodePort: 30163
      protocol: TCP
      port: 8080 # The port that the service is running on in the cluster
      targetPort: 8080 # The port exposed by the service
  type: NodePort # type of the service. LoadBalancer indicates that our service will be external.


